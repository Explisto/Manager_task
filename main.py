#   ПО для создания списка дел
#   Оно имеет следующий функционал:
#   1. Добавление дела
#   2. Просмотр списка дел
#   3. Удаление элемента списка
#   4. Выход из ПО
#   Функции могут дополняться.

#   Функция добавления нового дела в список
def add_task(list_to_do):
    print("Вы выбрали пункт:")
    print("=> Добавление нового дела в список;")
    text_task = input("=> Введите свое новое дело: ")
    # Добавление в список
    list_to_do.append(text_task)
    print("Ваше дело успешно добавлено в список!")
    return 0


#   Функция вывода списка дел в консоль
def print_tasks(list_to_do):
    print("Вы выбрали пункт:")
    print("=> Вывод в консоль списка дел;")
    # Если список дел пустой
    if len(list_to_do) == 0:
        print("Список дел пуст")
        return 0
    task_count = 1
    # Вывод списка дел
    for task in list_to_do:
        print(task_count, ".", task)
        task_count += 1
    print("Дела из списка выведены!")
    return 0


#   Функция удаления дела из списка
def remove_task(list_to_do):
    print("Вы выбрали пункт:")
    print("=> Удаление дела из списка;")
    index_task = input("=> Введите номер дела, которое необходимо удалить: ")
    # Проверка на нахождение в строке посторонних символов
    if not index_task.isdigit():
        print("Произошла ошибка! Строка содержит посторонние символы! Принимаются только цифры!")
        return 1
    index_task = int(index_task)
    # Проверка на индекс элемента
    if index_task < 1 or index_task > len(list_to_do):
        print("Произошла ошибка! Дела с данным индексом не существует в списке!")
        return 2
    # Удаление элемента из списка
    if list_to_do.pop(index_task - 1):
        print("Дело под номером", index_task, " успешно удалено!")
        return 0
    else:
        print("Произошла ошибка! Попробуйте еще раз!")
        return 3


#   Функция вывода приветственного сообщения
def print_hello():
    print("Вас приветствует программа 'Планировщик дел'.")
    print("В ней Вы можете записывать и отслеживать свои активности в течении дня.")
    print("Программа имеет следующий функционал:")
    print("1. При нажатии клавиши '1' Вы можете добавить дело в общий список.")
    print("2. При нажатии клавиши '2' Вы можете посмотреть весь список дел.")
    print("3. При нажатии клавиши '3' Вы можете удалить дело по его индексу.")
    print("4. При нажатии клавиши '4' Вы закончите выполнение программы.")
    print("При возникновении непредвиденных ситуаций, программа будет записывать соответствующие предупреждения.")

#   Основная функция программы
def task_manager():
    # Вызов функции для написания приветственного сообщения
    print_hello()
    # Создания списка дел
    list_to_do = []
    # Основной цикл программы
    while True:
        # Метка нажатия клавиши пользователм
        flag_control = False
        # Прием клавиши управления от пользователя
        control = input("Сделайте свой выбор: ")

        # В зависимости от нажатой клавиши идут сценарии работы программы
        if control == "1":
            flag_control = True
            flag_error = add_task(list_to_do)

        if control == "2":
            flag_control = True
            flag_error = print_tasks(list_to_do)

        if control == "3":
            flag_control = True
            flag_error = remove_task(list_to_do)

        if control == "4":
            # Нажатие клавиши
            flag_control = True
            # Сообщение об окончании работы
            print("Окончание работы программы. Увидимся скоро!!!")
            # Прекращение работы цикла
            break
        # Статус работы функции при работе программы
        print("Статус работы шага = ", flag_error)
        if not flag_control:
            # Сообщение о неверном нажатии клавиши
            print("Неверное нажатие клавиши. Попробуйте еще раз. ")

# Вызов основной функции
task_manager()